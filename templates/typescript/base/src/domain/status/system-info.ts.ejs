export type DependencyHealth = 'ok' | 'warning' | 'critical' | 'skipped';

export interface DependencyStatus {
  name: string;
  status: DependencyHealth;
  details?: string;
}

export interface FeatureDescriptor {
  key: string;
  name: string;
  description: string;
  summary: string;
}

export interface DataProviderDescriptor {
  key: string;
  name: string;
  summary: string;
  kind: 'database' | 'orm' | 'storage';
  status: DependencyHealth;
  details: string;
}

export interface SystemInfoSnapshot {\n  name: string;\n  version: string;\n  environment: string;\n  port: number;\n  documentationUrl: string;\n  features: FeatureDescriptor[];\n  dependencies: DependencyStatus[];\n  dataProviders: DataProviderDescriptor[];\n  featureFlags: Record<string, boolean>;\n  featureFlagsUpdatedAt: string;\n}

export interface SystemInfoProvider {
  getSnapshot(): Promise<SystemInfoSnapshot>;
}

