<% if (features.includes('auth')) { %>
import { NotFoundError } from '../../errors/not-found-error';
import { UserRepository } from '../../../domain/repositories/user-repository';
import { User } from '../../../domain/entities/user';

interface GetProfileRequest {
  userId: string;
}

export class GetProfileUseCase {
  constructor(private readonly userRepository: UserRepository) {}

  async execute({ userId }: GetProfileRequest): Promise<User> {
    const user = await this.userRepository.findById(userId);

    if (!user) {
      throw new NotFoundError('User not found');
    }

    return user;
  }
}
<% } %>
